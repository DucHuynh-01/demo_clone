{
  "version": 3,
  "sources": ["../../../lib/hoc/withErrorBoundary.tsx"],
  "sourcesContent": ["import type { ComponentType, ErrorInfo, ReactElement } from 'react';\r\nimport { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component<\r\n  {\r\n    children: ReactElement;\r\n    fallback: ReactElement;\r\n  },\r\n  {\r\n    hasError: boolean;\r\n  }\r\n> {\r\n  state = { hasError: false };\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport function withErrorBoundary<T extends Record<string, unknown>>(\r\n  Component: ComponentType<T>,\r\n  ErrorComponent: ReactElement,\r\n) {\r\n  return function WithErrorBoundary(props: T) {\r\n    return (\r\n      <ErrorBoundary fallback={ErrorComponent}>\r\n        <Component {...props} />\r\n      </ErrorBoundary>\r\n    );\r\n  };\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAsCQ;AArCR,SAAS,iBAAiB;AAE1B,MAAM,sBAAsB,UAQ1B;AAAA,EARF;AAAA;AASE,iBAAQ,EAAE,UAAU,MAAM;AAAA;AAAA,EAE1B,OAAO,2BAA2B;AAChC,WAAO,EAAE,UAAU,KAAK;AAAA,EAC1B;AAAA,EAEA,kBAAkB,OAAc,WAAsB;AACpD,YAAQ,MAAM,OAAO,SAAS;AAAA,EAChC;AAAA,EAEA,SAAS;AACP,QAAI,KAAK,MAAM,UAAU;AACvB,aAAO,KAAK,MAAM;AAAA,IACpB;AAEA,WAAO,KAAK,MAAM;AAAA,EACpB;AACF;AAEO,gBAAS,kBACdA,YACA,gBACA;AACA,SAAO,SAAS,kBAAkB,OAAU;AAC1C,WACE,oBAAC,iBAAc,UAAU,gBACvB,8BAACA,YAAA,mBAAc,MAAO,GACxB;AAAA,EAEJ;AACF;",
  "names": ["Component"]
}
